transpose.c:1:0: keyword int
transpose.c:1:4: identifier main
transpose.c:1:8: punctuator (
transpose.c:1:9: punctuator )
transpose.c:2:0: punctuator {
transpose.c:3:2: keyword int
transpose.c:3:6: identifier a
transpose.c:3:7: punctuator [
transpose.c:3:8: constant 10
transpose.c:3:10: punctuator ]
transpose.c:3:11: punctuator [
transpose.c:3:12: constant 10
transpose.c:3:14: punctuator ]
transpose.c:3:15: punctuator ,
transpose.c:3:17: identifier transpose
transpose.c:3:26: punctuator [
transpose.c:3:27: constant 10
transpose.c:3:29: punctuator ]
transpose.c:3:30: punctuator [
transpose.c:3:31: constant 10
transpose.c:3:33: punctuator ]
transpose.c:3:34: punctuator ,
transpose.c:3:36: identifier r
transpose.c:3:37: punctuator ,
transpose.c:3:39: identifier c
transpose.c:3:40: punctuator ,
transpose.c:3:42: identifier i
transpose.c:3:43: punctuator ,
transpose.c:3:45: identifier j
transpose.c:3:46: punctuator ;
transpose.c:4:2: identifier printf
transpose.c:4:8: punctuator (
transpose.c:4:9: string-literal "Enter rows and columns of matrix: "
transpose.c:4:45: punctuator )
transpose.c:4:46: punctuator ;
transpose.c:5:2: identifier scanf
transpose.c:5:7: punctuator (
transpose.c:5:8: string-literal "%d %d"
transpose.c:5:15: punctuator ,
transpose.c:5:17: punctuator &
transpose.c:5:18: identifier r
transpose.c:5:19: punctuator ,
transpose.c:5:21: punctuator &
transpose.c:5:22: identifier c
transpose.c:5:23: punctuator )
transpose.c:5:24: punctuator ;
transpose.c:8:2: identifier printf
transpose.c:8:8: punctuator (
transpose.c:8:9: string-literal "\nEnter elements of matrix:\n"
transpose.c:8:40: punctuator )
transpose.c:8:41: punctuator ;
transpose.c:9:2: keyword for
transpose.c:9:5: punctuator (
transpose.c:9:6: identifier i
transpose.c:9:7: punctuator =
transpose.c:9:8: constant 0
transpose.c:9:9: punctuator ;
transpose.c:9:11: identifier i
transpose.c:9:12: punctuator <
transpose.c:9:13: identifier r
transpose.c:9:14: punctuator ;
transpose.c:9:16: punctuator ++
transpose.c:9:18: identifier i
transpose.c:9:19: punctuator )
transpose.c:10:4: keyword for
transpose.c:10:7: punctuator (
transpose.c:10:8: identifier j
transpose.c:10:9: punctuator =
transpose.c:10:10: constant 0
transpose.c:10:11: punctuator ;
transpose.c:10:13: identifier j
transpose.c:10:14: punctuator <
transpose.c:10:15: identifier c
transpose.c:10:16: punctuator ;
transpose.c:10:18: punctuator ++
transpose.c:10:20: identifier j
transpose.c:10:21: punctuator )
transpose.c:11:4: punctuator {
transpose.c:12:6: identifier printf
transpose.c:12:12: punctuator (
transpose.c:12:13: string-literal "Enter element a%d%d: "
transpose.c:12:36: punctuator ,
transpose.c:12:37: identifier i
transpose.c:12:38: punctuator +
transpose.c:12:39: constant 1
transpose.c:12:40: punctuator ,
transpose.c:12:42: identifier j
transpose.c:12:43: punctuator +
transpose.c:12:44: constant 1
transpose.c:12:45: punctuator )
transpose.c:12:46: punctuator ;
transpose.c:13:6: identifier scanf
transpose.c:13:11: punctuator (
transpose.c:13:12: string-literal "%d"
transpose.c:13:16: punctuator ,
transpose.c:13:18: punctuator &
transpose.c:13:19: identifier a
transpose.c:13:20: punctuator [
transpose.c:13:21: identifier i
transpose.c:13:22: punctuator ]
transpose.c:13:23: punctuator [
transpose.c:13:24: identifier j
transpose.c:13:25: punctuator ]
transpose.c:13:26: punctuator )
transpose.c:13:27: punctuator ;
transpose.c:14:4: punctuator }
transpose.c:17:2: identifier printf
transpose.c:17:8: punctuator (
transpose.c:17:9: string-literal "\nEntered Matrix: \n"
transpose.c:17:31: punctuator )
transpose.c:17:32: punctuator ;
transpose.c:18:2: keyword for
transpose.c:18:5: punctuator (
transpose.c:18:6: identifier i
transpose.c:18:7: punctuator =
transpose.c:18:8: constant 0
transpose.c:18:9: punctuator ;
transpose.c:18:11: identifier i
transpose.c:18:12: punctuator <
transpose.c:18:13: identifier r
transpose.c:18:14: punctuator ;
transpose.c:18:16: punctuator ++
transpose.c:18:18: identifier i
transpose.c:18:19: punctuator )
transpose.c:19:4: keyword for
transpose.c:19:7: punctuator (
transpose.c:19:8: identifier j
transpose.c:19:9: punctuator =
transpose.c:19:10: constant 0
transpose.c:19:11: punctuator ;
transpose.c:19:13: identifier j
transpose.c:19:14: punctuator <
transpose.c:19:15: identifier c
transpose.c:19:16: punctuator ;
transpose.c:19:18: punctuator ++
transpose.c:19:20: identifier j
transpose.c:19:21: punctuator )
transpose.c:20:4: punctuator {
transpose.c:21:6: identifier printf
transpose.c:21:12: punctuator (
transpose.c:21:13: string-literal "%d  "
transpose.c:21:19: punctuator ,
transpose.c:21:21: identifier a
transpose.c:21:22: punctuator [
transpose.c:21:23: identifier i
transpose.c:21:24: punctuator ]
transpose.c:21:25: punctuator [
transpose.c:21:26: identifier j
transpose.c:21:27: punctuator ]
transpose.c:21:28: punctuator )
transpose.c:21:29: punctuator ;
transpose.c:22:6: keyword if
transpose.c:22:9: punctuator (
transpose.c:22:10: identifier j
transpose.c:22:12: punctuator ==
transpose.c:22:15: identifier c
transpose.c:22:16: constant -1
transpose.c:22:18: punctuator )
transpose.c:23:8: identifier printf
transpose.c:23:14: punctuator (
transpose.c:23:15: string-literal "\n\n"
transpose.c:23:21: punctuator )
transpose.c:23:22: punctuator ;
transpose.c:24:4: punctuator }
transpose.c:27:2: keyword for
transpose.c:27:5: punctuator (
transpose.c:27:6: identifier i
transpose.c:27:7: punctuator =
transpose.c:27:8: constant 0
transpose.c:27:9: punctuator ;
transpose.c:27:11: identifier i
transpose.c:27:12: punctuator <
transpose.c:27:13: identifier r
transpose.c:27:14: punctuator ;
transpose.c:27:16: punctuator ++
transpose.c:27:18: identifier i
transpose.c:27:19: punctuator )
transpose.c:28:4: keyword for
transpose.c:28:7: punctuator (
transpose.c:28:8: identifier j
transpose.c:28:9: punctuator =
transpose.c:28:10: constant 0
transpose.c:28:11: punctuator ;
transpose.c:28:13: identifier j
transpose.c:28:14: punctuator <
transpose.c:28:15: identifier c
transpose.c:28:16: punctuator ;
transpose.c:28:18: punctuator ++
transpose.c:28:20: identifier j
transpose.c:28:21: punctuator )
transpose.c:29:4: punctuator {
transpose.c:30:6: identifier transpose
transpose.c:30:15: punctuator [
transpose.c:30:16: identifier j
transpose.c:30:17: punctuator ]
transpose.c:30:18: punctuator [
transpose.c:30:19: identifier i
transpose.c:30:20: punctuator ]
transpose.c:30:22: punctuator =
transpose.c:30:24: identifier a
transpose.c:30:25: punctuator [
transpose.c:30:26: identifier i
transpose.c:30:27: punctuator ]
transpose.c:30:28: punctuator [
transpose.c:30:29: identifier j
transpose.c:30:30: punctuator ]
transpose.c:30:31: punctuator ;
transpose.c:31:4: punctuator }
transpose.c:34:2: identifier printf
transpose.c:34:8: punctuator (
transpose.c:34:9: string-literal "\nTranspose of Matrix:\n"
transpose.c:34:35: punctuator )
transpose.c:34:36: punctuator ;
transpose.c:35:2: keyword for
transpose.c:35:5: punctuator (
transpose.c:35:6: identifier i
transpose.c:35:7: punctuator =
transpose.c:35:8: constant 0
transpose.c:35:9: punctuator ;
transpose.c:35:11: identifier i
transpose.c:35:12: punctuator <
transpose.c:35:13: identifier c
transpose.c:35:14: punctuator ;
transpose.c:35:16: punctuator ++
transpose.c:35:18: identifier i
transpose.c:35:19: punctuator )
transpose.c:36:4: keyword for
transpose.c:36:7: punctuator (
transpose.c:36:8: identifier j
transpose.c:36:9: punctuator =
transpose.c:36:10: constant 0
transpose.c:36:11: punctuator ;
transpose.c:36:13: identifier j
transpose.c:36:14: punctuator <
transpose.c:36:15: identifier r
transpose.c:36:16: punctuator ;
transpose.c:36:18: punctuator ++
transpose.c:36:20: identifier j
transpose.c:36:21: punctuator )
transpose.c:37:4: punctuator {
transpose.c:38:6: identifier printf
transpose.c:38:12: punctuator (
transpose.c:38:13: string-literal "%d  "
transpose.c:38:19: punctuator ,
transpose.c:38:20: identifier transpose
transpose.c:38:29: punctuator [
transpose.c:38:30: identifier i
transpose.c:38:31: punctuator ]
transpose.c:38:32: punctuator [
transpose.c:38:33: identifier j
transpose.c:38:34: punctuator ]
transpose.c:38:35: punctuator )
transpose.c:38:36: punctuator ;
transpose.c:39:6: keyword if
transpose.c:39:8: punctuator (
transpose.c:39:9: identifier j
transpose.c:39:10: punctuator ==
transpose.c:39:12: identifier r
transpose.c:39:13: constant -1
transpose.c:39:15: punctuator )
transpose.c:40:8: identifier printf
transpose.c:40:14: punctuator (
transpose.c:40:15: string-literal "\n\n"
transpose.c:40:21: punctuator )
transpose.c:40:22: punctuator ;
transpose.c:41:4: punctuator }
transpose.c:43:2: keyword return
transpose.c:43:9: constant 0
transpose.c:43:10: punctuator ;
