transpose.c:1:1: keyword int
transpose.c:1:5: identifier main
transpose.c:1:9: punctuator (
transpose.c:1:10: punctuator )
transpose.c:2:1: punctuator {
transpose.c:3:3: keyword int
transpose.c:3:7: identifier a
transpose.c:3:8: punctuator [
transpose.c:3:9: constant 10
transpose.c:3:11: punctuator ]
transpose.c:3:12: punctuator [
transpose.c:3:13: constant 10
transpose.c:3:15: punctuator ]
transpose.c:3:16: punctuator ,
transpose.c:3:18: identifier transpose
transpose.c:3:27: punctuator [
transpose.c:3:28: constant 10
transpose.c:3:30: punctuator ]
transpose.c:3:31: punctuator [
transpose.c:3:32: constant 10
transpose.c:3:34: punctuator ]
transpose.c:3:35: punctuator ,
transpose.c:3:37: identifier r
transpose.c:3:38: punctuator ,
transpose.c:3:40: identifier c
transpose.c:3:41: punctuator ,
transpose.c:3:43: identifier i
transpose.c:3:44: punctuator ,
transpose.c:3:46: identifier j
transpose.c:3:47: punctuator ;
transpose.c:4:3: identifier printf
transpose.c:4:9: punctuator (
transpose.c:4:10: string-literal "Enter rows and columns of matrix: "
transpose.c:4:46: punctuator )
transpose.c:4:47: punctuator ;
transpose.c:5:3: identifier scanf
transpose.c:5:8: punctuator (
transpose.c:5:9: string-literal "%d %d"
transpose.c:5:16: punctuator ,
transpose.c:5:18: punctuator &
transpose.c:5:19: identifier r
transpose.c:5:20: punctuator ,
transpose.c:5:22: punctuator &
transpose.c:5:23: identifier c
transpose.c:5:24: punctuator )
transpose.c:5:25: punctuator ;
transpose.c:8:3: identifier printf
transpose.c:8:9: punctuator (
transpose.c:8:10: string-literal "\nEnter elements of matrix:\n"
transpose.c:8:41: punctuator )
transpose.c:8:42: punctuator ;
transpose.c:9:3: keyword for
transpose.c:9:6: punctuator (
transpose.c:9:7: identifier i
transpose.c:9:8: punctuator =
transpose.c:9:9: constant 0
transpose.c:9:10: punctuator ;
transpose.c:9:12: identifier i
transpose.c:9:13: punctuator <
transpose.c:9:14: identifier r
transpose.c:9:15: punctuator ;
transpose.c:9:17: punctuator ++
transpose.c:9:19: identifier i
transpose.c:9:20: punctuator )
transpose.c:10:5: keyword for
transpose.c:10:8: punctuator (
transpose.c:10:9: identifier j
transpose.c:10:10: punctuator =
transpose.c:10:11: constant 0
transpose.c:10:12: punctuator ;
transpose.c:10:14: identifier j
transpose.c:10:15: punctuator <
transpose.c:10:16: identifier c
transpose.c:10:17: punctuator ;
transpose.c:10:19: punctuator ++
transpose.c:10:21: identifier j
transpose.c:10:22: punctuator )
transpose.c:11:5: punctuator {
transpose.c:12:7: identifier printf
transpose.c:12:13: punctuator (
transpose.c:12:14: string-literal "Enter element a%d%d: "
transpose.c:12:37: punctuator ,
transpose.c:12:38: identifier i
transpose.c:12:39: punctuator +
transpose.c:12:40: constant 1
transpose.c:12:41: punctuator ,
transpose.c:12:43: identifier j
transpose.c:12:44: punctuator +
transpose.c:12:45: constant 1
transpose.c:12:46: punctuator )
transpose.c:12:47: punctuator ;
transpose.c:13:7: identifier scanf
transpose.c:13:12: punctuator (
transpose.c:13:13: string-literal "%d"
transpose.c:13:17: punctuator ,
transpose.c:13:19: punctuator &
transpose.c:13:20: identifier a
transpose.c:13:21: punctuator [
transpose.c:13:22: identifier i
transpose.c:13:23: punctuator ]
transpose.c:13:24: punctuator [
transpose.c:13:25: identifier j
transpose.c:13:26: punctuator ]
transpose.c:13:27: punctuator )
transpose.c:13:28: punctuator ;
transpose.c:14:5: punctuator }
transpose.c:17:3: identifier printf
transpose.c:17:9: punctuator (
transpose.c:17:10: string-literal "\nEntered Matrix: \n"
transpose.c:17:32: punctuator )
transpose.c:17:33: punctuator ;
transpose.c:18:3: keyword for
transpose.c:18:6: punctuator (
transpose.c:18:7: identifier i
transpose.c:18:8: punctuator =
transpose.c:18:9: constant 0
transpose.c:18:10: punctuator ;
transpose.c:18:12: identifier i
transpose.c:18:13: punctuator <
transpose.c:18:14: identifier r
transpose.c:18:15: punctuator ;
transpose.c:18:17: punctuator ++
transpose.c:18:19: identifier i
transpose.c:18:20: punctuator )
transpose.c:19:5: keyword for
transpose.c:19:8: punctuator (
transpose.c:19:9: identifier j
transpose.c:19:10: punctuator =
transpose.c:19:11: constant 0
transpose.c:19:12: punctuator ;
transpose.c:19:14: identifier j
transpose.c:19:15: punctuator <
transpose.c:19:16: identifier c
transpose.c:19:17: punctuator ;
transpose.c:19:19: punctuator ++
transpose.c:19:21: identifier j
transpose.c:19:22: punctuator )
transpose.c:20:5: punctuator {
transpose.c:21:7: identifier printf
transpose.c:21:13: punctuator (
transpose.c:21:14: string-literal "%d  "
transpose.c:21:20: punctuator ,
transpose.c:21:22: identifier a
transpose.c:21:23: punctuator [
transpose.c:21:24: identifier i
transpose.c:21:25: punctuator ]
transpose.c:21:26: punctuator [
transpose.c:21:27: identifier j
transpose.c:21:28: punctuator ]
transpose.c:21:29: punctuator )
transpose.c:21:30: punctuator ;
transpose.c:22:7: keyword if
transpose.c:22:10: punctuator (
transpose.c:22:11: identifier j
transpose.c:22:13: punctuator ==
transpose.c:22:16: identifier c
transpose.c:22:17: punctuator -
transpose.c:22:18: constant 1
transpose.c:22:19: punctuator )
transpose.c:23:9: identifier printf
transpose.c:23:15: punctuator (
transpose.c:23:16: string-literal "\n\n"
transpose.c:23:22: punctuator )
transpose.c:23:23: punctuator ;
transpose.c:24:5: punctuator }
transpose.c:27:3: keyword for
transpose.c:27:6: punctuator (
transpose.c:27:7: identifier i
transpose.c:27:8: punctuator =
transpose.c:27:9: constant 0
transpose.c:27:10: punctuator ;
transpose.c:27:12: identifier i
transpose.c:27:13: punctuator <
transpose.c:27:14: identifier r
transpose.c:27:15: punctuator ;
transpose.c:27:17: punctuator ++
transpose.c:27:19: identifier i
transpose.c:27:20: punctuator )
transpose.c:28:5: keyword for
transpose.c:28:8: punctuator (
transpose.c:28:9: identifier j
transpose.c:28:10: punctuator =
transpose.c:28:11: constant 0
transpose.c:28:12: punctuator ;
transpose.c:28:14: identifier j
transpose.c:28:15: punctuator <
transpose.c:28:16: identifier c
transpose.c:28:17: punctuator ;
transpose.c:28:19: punctuator ++
transpose.c:28:21: identifier j
transpose.c:28:22: punctuator )
transpose.c:29:5: punctuator {
transpose.c:30:7: identifier transpose
transpose.c:30:16: punctuator [
transpose.c:30:17: identifier j
transpose.c:30:18: punctuator ]
transpose.c:30:19: punctuator [
transpose.c:30:20: identifier i
transpose.c:30:21: punctuator ]
transpose.c:30:23: punctuator =
transpose.c:30:25: identifier a
transpose.c:30:26: punctuator [
transpose.c:30:27: identifier i
transpose.c:30:28: punctuator ]
transpose.c:30:29: punctuator [
transpose.c:30:30: identifier j
transpose.c:30:31: punctuator ]
transpose.c:30:32: punctuator ;
transpose.c:31:5: punctuator }
transpose.c:34:3: identifier printf
transpose.c:34:9: punctuator (
transpose.c:34:10: string-literal "\nTranspose of Matrix:\n"
transpose.c:34:36: punctuator )
transpose.c:34:37: punctuator ;
transpose.c:35:3: keyword for
transpose.c:35:6: punctuator (
transpose.c:35:7: identifier i
transpose.c:35:8: punctuator =
transpose.c:35:9: constant 0
transpose.c:35:10: punctuator ;
transpose.c:35:12: identifier i
transpose.c:35:13: punctuator <
transpose.c:35:14: identifier c
transpose.c:35:15: punctuator ;
transpose.c:35:17: punctuator ++
transpose.c:35:19: identifier i
transpose.c:35:20: punctuator )
transpose.c:36:5: keyword for
transpose.c:36:8: punctuator (
transpose.c:36:9: identifier j
transpose.c:36:10: punctuator =
transpose.c:36:11: constant 0
transpose.c:36:12: punctuator ;
transpose.c:36:14: identifier j
transpose.c:36:15: punctuator <
transpose.c:36:16: identifier r
transpose.c:36:17: punctuator ;
transpose.c:36:19: punctuator ++
transpose.c:36:21: identifier j
transpose.c:36:22: punctuator )
transpose.c:37:5: punctuator {
transpose.c:38:7: identifier printf
transpose.c:38:13: punctuator (
transpose.c:38:14: string-literal "%d  "
transpose.c:38:20: punctuator ,
transpose.c:38:21: identifier transpose
transpose.c:38:30: punctuator [
transpose.c:38:31: identifier i
transpose.c:38:32: punctuator ]
transpose.c:38:33: punctuator [
transpose.c:38:34: identifier j
transpose.c:38:35: punctuator ]
transpose.c:38:36: punctuator )
transpose.c:38:37: punctuator ;
transpose.c:39:7: keyword if
transpose.c:39:9: punctuator (
transpose.c:39:10: identifier j
transpose.c:39:11: punctuator ==
transpose.c:39:13: identifier r
transpose.c:39:14: punctuator -
transpose.c:39:15: constant 1
transpose.c:39:16: punctuator )
transpose.c:40:9: identifier printf
transpose.c:40:15: punctuator (
transpose.c:40:16: string-literal "\n\n"
transpose.c:40:22: punctuator )
transpose.c:40:23: punctuator ;
transpose.c:41:5: punctuator }
transpose.c:43:3: keyword return
transpose.c:43:10: constant 0
transpose.c:43:11: punctuator ;
